

class KeyPadSolution {
	public static String solution(int[] numbers, String hand) {
		
		final int HEIGHT_MAX = 4;
		final int WIDTH_MAX = 3;
		final int NOW_POSITION = 1;
		
		//숫자배프 가상으로 2차원 배열 구성
		String[][] keyPadArray = {
				{"1","2","3"},
				{"4","5","6"},
				{"7","8","9"},
				{"*","0","#"}
		};
		
		//왼손 초기화 윙 치키
		int [][] leftHandArray = new int[HEIGHT_MAX][WIDTH_MAX];
		leftHandArray[HEIGHT_MAX][NOW_POSITION] = NOW_POSITION;
		
		//오른손 초기화 윙 치키
		int[][] rightHandArray = new int[HEIGHT_MAX][WIDTH_MAX];;
		rightHandArray[HEIGHT_MAX][WIDTH_MAX] = NOW_POSITION;
		
		//탐색
		for(int i = 0; i < numbers.length;i++) { //numbers 배열 하나하나 돌려주구영
			int targetHeight = 0;
			int targetWidth = 0;
			for(int keyHeightIndex = 0; keyHeightIndex < keyPadArray.length;keyHeightIndex++) {
				for(int keyWidthIndex = 0; keyWidthIndex <keyPadArray[i].length;keyWidthIndex++) {
					if(keyHeightIndex = 3 && keyWidthIndex = 0) {
						
					}
				}
			}
			
		}
		
		
		return null;
	}
}